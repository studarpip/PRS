{
	"info": {
		"_postman_id": "d4f8ac4f-201e-43de-b192-9961526e15d6",
		"name": "Administratoriaus funkcijos",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24864492"
	},
	"item": [
		{
			"name": "Prisijungimas",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Login returns token or sets session\", function () {\r",
							"    const cookies = pm.cookies;\r",
							"    pm.expect(Object.keys(cookies).length).to.be.above(0);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"admin\",\r\n  \"password\": \"admin\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7238/auth/login",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7238",
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Prekių peržiūra",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const res = pm.response.json();\r",
							"\r",
							"pm.test(\"Admin product search returns data\", function () {\r",
							"    pm.expect(res.success).to.be.true;\r",
							"    pm.expect(res.data).to.be.an(\"array\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"page\": 1,\r\n  \"pageSize\": 20\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7238/api/admin/products/search",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7238",
					"path": [
						"api",
						"admin",
						"products",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "Prekės kūrimas",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const res = pm.response.json();\r",
							"\r",
							"pm.test(\"Product creation returns 200 OK\", function () {\r",
							"    pm.expect(pm.response.code).to.eql(200);\r",
							"    pm.expect(res.success).to.be.true;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"test\",\r\n  \"description\": \"test\",\r\n  \"categories\": [],\r\n  \"price\": 1\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7238/api/admin/products",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7238",
					"path": [
						"api",
						"admin",
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Naujos prekės gavimas",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const res = pm.response.json();\r",
							"\r",
							"pm.test(\"Admin search after creation is successful\", function () {\r",
							"    pm.expect(pm.response.code).to.eql(200);\r",
							"    pm.expect(res.success).to.be.true;\r",
							"    pm.expect(res.data).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							"const testProduct = res.data.find(p => p.name === \"test\");\r",
							"\r",
							"pm.test(\"Created test product is found\", function () {\r",
							"    pm.expect(testProduct).to.not.be.undefined;\r",
							"    pm.environment.set(\"adminCreatedProductId\", testProduct.id);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"page\": 1,\r\n  \"pageSize\": 20\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7238/api/admin/products/search",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7238",
					"path": [
						"api",
						"admin",
						"products",
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "Prekės redagavimas",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const res = pm.response.json();\r",
							"\r",
							"pm.test(\"Product update is successful\", function () {\r",
							"    pm.expect(pm.response.code).to.eql(200);\r",
							"    pm.expect(res.success).to.be.true;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"test-updated\",\r\n  \"description\": \"test\",\r\n  \"categories\": [],\r\n  \"price\": 1\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7238/api/admin/products/{{adminCreatedProductId}}",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7238",
					"path": [
						"api",
						"admin",
						"products",
						"{{adminCreatedProductId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Prekės šalinimas",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Product deleted successfully\", function () {\r",
							"    pm.expect(pm.response.code).to.eql(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://localhost:7238/api/admin/products/{{adminCreatedProductId}}",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7238",
					"path": [
						"api",
						"admin",
						"products",
						"{{adminCreatedProductId}}"
					]
				}
			},
			"response": []
		}
	]
}